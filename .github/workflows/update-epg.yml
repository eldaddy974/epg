name: Build Custom EPG from Your M3U (Google Drive)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests m3u-parser xmltodict

      - name: Download playlist from Google Drive
        run: |
          set -e
          echo "Downloading M3U from Google Drive..."
          curl -L "https://drive.google.com/uc?export=download&id=1ycrzgwIoDsf_Rc11V3jj1D47mF33RTID" -o playlist.m3u
          echo "Playlist size:"
          wc -c playlist.m3u

      - name: Build epg.xml filtered to your channels
        run: |
          set -x
          python - << 'PY'
import traceback
try:
    import requests
    import xmltodict
    from m3u_parser import M3uParser

    # Load playlist
    with open("playlist.m3u", "r", encoding="utf-8", errors="ignore") as f:
        playlist_content = f.read()

    parser = M3uParser()
    parser.parse_m3u(playlist_content)

    tvg_ids = set()
    for ch in parser.get_list():
        if ch.get("tvg_id"):
            tvg_ids.add(ch["tvg_id"])

    print(f"Playlist: {len(tvg_ids)} tvg-ids; {len(parser.get_list())} names")

    # Download channels.json
    channels_url = "https://iptv-org.github.io/api/channels.json"
    print("Downloading channels.json ...")
    channels = requests.get(channels_url)
    channels.raise_for_status()
    channels_data = channels.json()

    # Download EPG
    epg_url = "https://iptv-org.github.io/epg/guides/all.xml"
    print("Downloading full EPG ...")
    epg = requests.get(epg_url)
    epg.raise_for_status()
    epg_dict = xmltodict.parse(epg.text)

    # Filter EPG
    epg_dict["tv"]["channel"] = [
        c for c in epg_dict["tv"].get("channel", [])
        if c.get("@id") in tvg_ids
    ]
    epg_dict["tv"]["programme"] = [
        p for p in epg_dict["tv"].get("programme", [])
        if p.get("@channel") in tvg_ids
    ]

    # Save filtered EPG
    with open("epg.xml", "w", encoding="utf-8") as f:
        f.write(xmltodict.unparse(epg_dict, pretty=True))

    print("EPG build complete.")

except Exception as e:
    print("FATAL ERROR:", e)
    traceback.print_exc()
    import sys
    sys.exit(1)
PY

      - name: Commit epg.xml
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add epg.xml
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update custom EPG"
            git push
          fi
