- name: Build epg.xml filtered to your channels
        run: |
          set -euxo pipefail
          python - << 'PY'
          import sys, os, re, traceback
          from unidecode import unidecode
          from lxml import etree
          import requests

          def norm(s: str) -> str:
              if not s: return ""
              s = unidecode(s).strip().lower()
              s = re.sub(r"\s+", " ", s)
              return s

          try:
              # 1) Load playlist
              if not os.path.exists("playlist.m3u") or os.path.getsize("playlist.m3u") == 0:
                  print("ERROR: playlist.m3u missing or empty"); sys.exit(1)
              txt = open("playlist.m3u","r",encoding="utf-8",errors="ignore").read()

              # Extract tvg-id and names
              tvg_ids = set(m.group(1).strip() for m in re.finditer(r'#EXTINF[^\n]*tvg-id="([^"]+)"', txt, re.I))
              names = set(m.group(2).strip() for m in re.finditer(r'#EXTINF[^\n]*,(.+)$', txt, re.M))
              names |= set(m.group(1).strip() for m in re.finditer(r'#EXTINF[^\n]*tvg-name="([^"]+)"', txt, re.I))

              names_norm = {norm(n) for n in names if n}
              tvg_ids = {i for i in tvg_ids if i}
              print(f"Playlist: {len(tvg_ids)} tvg-ids; {len(names_norm)} names")
          except Exception as e:
              print("FATAL ERROR:", e)
              traceback.print_exc()
              sys.exit(1)
          PY
