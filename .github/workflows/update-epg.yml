name: Build Custom EPG from Your M3U (Google Drive)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"    # daily at 03:00 UTC
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/update-epg.yml"
      - "README.md"

permissions:
  contents: write

env:
  # ✏️ Put your Google Drive FILE ID here (the long string in the share link)
  FILE_ID: 1ycrzgwIoDsf_Rc11V3jj1D47mF33RTID

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests lxml unidecode gdown

      - name: Download playlist from Google Drive (robust)
        shell: bash
        run: |
          set -euo pipefail
          gdown --id "$FILE_ID" --output playlist.m3u
          echo "Playlist bytes: $(wc -c < playlist.m3u || true)"
          echo "First 5 lines:"
          head -n 5 playlist.m3u || true

      - name: Build epg.xml filtered to your channels
        shell: bash
        run: |
          set -euo pipefail
          python - << 'PY'
          import os, re, io, gzip, sys, time
          import requests
          from lxml import etree
          from unidecode import unidecode

          # ---------- helpers ----------
          def norm(s: str) -> str:
            if not s: return ""
            s = unidecode(s).strip().lower()
            s = re.sub(r"\s+", " ", s)
            return s

          def try_get(url, timeout=30):
            try:
              r = requests.get(url, timeout=timeout)
              if r.status_code == 200:
                return r.content
              return None
            except Exception:
              return None

          # ---------- load playlist ----------
          if not os.path.exists("playlist.m
